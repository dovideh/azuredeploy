pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE_NAME = 'primary_container'
        DOCKERFILE_PATH = 'codefiles/container/src/Dockerfile.primary'
    }
    
    triggers {
        pollSCM('H/5 * * * *') // Poll every five minutes as an example
    }
    
    stages {
    
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
         stage('Build Docker Image') {
            steps {
                script {
                    // Retrieve Docker registry URL from Jenkins secret text
                    def dockerRegistryUrl = env.DOCKER_REGISTRY_URL
                    docker.withRegistry(dockerRegistryUrl, 'myACRCredentials') {
                        // Build Docker image
                        docker.build(DOCKER_IMAGE_NAME, "-f ${DOCKERFILE_PATH} .")
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Retrieve Docker registry URL from Jenkins secret text
                    def dockerRegistryUrl = env.DOCKER_REGISTRY_URL
                    docker.withRegistry(dockerRegistryUrl, 'myACRCredentials') {
                    // Push Docker image to registry
                    docker.image(DOCKER_IMAGE_NAME).push('latest')
                    }
                }
            }
        }
        
        stage('Build') {
            steps {
                sh 'echo clean'
            }
        }
        
        stage('Test') {
            steps {
                sh 'echo test'
            }
        }
        
        // Add more stages as needed
    }
    
    post {
        success {
            echo 'Build successful'
        }
        failure {
            echo 'Build failed'
        }
    }
}
